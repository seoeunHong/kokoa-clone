.nav {
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: #f9f9fa;
  padding: 20px 50px;
  /*
  Telling the CSS we want to keep the width size 
  even though we give padding on that
  (When you give padding, you would get longer width than you want
   because CSS give padding + wanted with)
  */
  box-sizing: border-box;
  border-top: 1px solid rgba(121, 121, 121, 0.2);
}

.nav__list {
  display: flex;
  justify-content: space-between;
}

.nav__link {
  color: #2e363e;
  /*
  position: absolute align itself with closest relative father
  If you don't allocate it, it consider its father as its body
  */
  position: relative;
}

@keyframes notificationAnimation {
  0% {
    transform: none;
  }
  50% {
    transform: translateY(-5px) rotateY(360deg);
  }
  100% {
    transform: none;
  }
}

.nav__notification {
  background-color: tomato;
  width: 30px;
  height: 30px;
  border-radius: 15px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  font-weight: 600;
  position: absolute;
  left: 15px;
  bottom: 15px;
  animation: notificationAnimation 1s ease-in-out infinite;
}

.nav__small-noti {
  background-color: tomato;
  display: block;
  width: 5px;
  height: 5px;
  border-radius: 2.5px;
  position: absolute;
  left: 30px;
  top: -15px;
}

@keyframes appearBtnAnimation {
  from {
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

.nav__btn {
  transform: translateY(50px);
  opacity: 0;
  animation: appearBtnAnimation 0.3s ease-in-out forwards;
}

.nav__btn:nth-child(2) {
  animation-delay: 0.2s;
}

.nav__btn:nth-child(3) {
  animation-delay: 0.5s;
}

.nav__btn:last-child {
  animation-delay: 0.8s;
}
